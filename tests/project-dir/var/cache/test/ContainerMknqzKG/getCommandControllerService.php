<?php

namespace ContainerMknqzKG;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCommandControllerService extends Survos_CommandBundle_Tests_TestKernelTestDebugContainer
{
    /**
     * Gets the public 'Survos\CommandBundle\Controller\CommandController' shared autowired service.
     *
     * @return \Survos\CommandBundle\Controller\CommandController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 6).'/vendor/symfony/service-contracts/ServiceSubscriberInterface.php';
        include_once \dirname(__DIR__, 6).'/vendor/symfony/framework-bundle/Controller/AbstractController.php';
        include_once \dirname(__DIR__, 6).'/src/Controller/CommandController.php';

        $container->services['Survos\\CommandBundle\\Controller\\CommandController'] = $instance = new \Survos\CommandBundle\Controller\CommandController(($container->services['kernel'] ?? $container->get('kernel', 1)), NULL, [], ['base_layout' => 'base.html.twig', 'subdomain_variable' => 'subdomain', 'namespaces' => []]);

        $instance->setContainer((new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'request_stack' => ['services', 'request_stack', 'getRequestStackService', false],
            'http_kernel' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'form.factory' => ['privates', 'form.factory', 'getForm_FactoryService', true],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', true],
        ], [
            'request_stack' => '?',
            'http_kernel' => '?',
            'form.factory' => '?',
            'parameter_bag' => '?',
        ]))->withContext('Survos\\CommandBundle\\Controller\\CommandController', $container));

        return $instance;
    }
}
